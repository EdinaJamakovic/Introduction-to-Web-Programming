{
    "openapi": "3.0.0",
    "info": {
        "title": "API",
        "description": "Web programming API",
        "contact": {
            "name": "Edina Jamakovic",
            "email": "edina.jamakovic@stu.ibu.edu.ba"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost/EdinaJamakovic/Introduction-to-Web-Programming/backend",
            "description": "API server"
        }
    ],
    "paths": {
        "/appointments": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get all appointments",
                "responses": {
                    "200": {
                        "description": "List of appointments"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Create a new appointment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "doctor_id": {
                                        "type": "integer"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "time": {
                                        "type": "string",
                                        "format": "time"
                                    },
                                    "service": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Appointment created"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/appointments/{id}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get an appointment by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment details"
                    },
                    "404": {
                        "description": "Appointment not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Update an appointment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "confirmed",
                                            "cancelled"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment updated"
                    },
                    "404": {
                        "description": "Appointment not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Delete an appointment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment deleted"
                    },
                    "404": {
                        "description": "Appointment not found"
                    }
                }
            }
        },
        "/appointments/patient/{id}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get appointments for a patient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of patient's appointments"
                    },
                    "404": {
                        "description": "Patient not found"
                    }
                }
            }
        },
        "/appointments/doctor/{id}/{status}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get appointments for a doctor by status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "confirmed",
                                "pending",
                                "cancelled"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of doctor's appointments"
                    },
                    "404": {
                        "description": "Doctor not found"
                    }
                }
            }
        },
        "/appointments/free": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get all available (free) appointments",
                "responses": {
                    "200": {
                        "description": "List of free appointments"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/medical-history": {
            "get": {
                "tags": [
                    "Medical History"
                ],
                "summary": "Get all medical history records",
                "responses": {
                    "200": {
                        "description": "List of medical records"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Medical History"
                ],
                "summary": "Create a new medical record",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "diagnosis": {
                                        "type": "string"
                                    },
                                    "treatment": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Medical record created"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/medical-history/{id}": {
            "get": {
                "tags": [
                    "Medical History"
                ],
                "summary": "Get a medical record by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Medical record details"
                    },
                    "404": {
                        "description": "Record not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Medical History"
                ],
                "summary": "Update a medical record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "diagnosis": {
                                        "type": "string"
                                    },
                                    "treatment": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Medical record updated"
                    },
                    "404": {
                        "description": "Record not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Medical History"
                ],
                "summary": "Delete a medical record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Medical record deleted"
                    },
                    "404": {
                        "description": "Record not found"
                    }
                }
            }
        },
        "/medical-history/patient/{id}": {
            "get": {
                "tags": [
                    "Medical History"
                ],
                "summary": "Get medical history for a patient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of patient's medical records"
                    },
                    "404": {
                        "description": "Patient not found"
                    }
                }
            }
        },
        "/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get all services",
                "responses": {
                    "200": {
                        "description": "List of services"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Create a new service",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service created"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/services/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get a service by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service details"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Services"
                ],
                "summary": "Update a service",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Services"
                ],
                "summary": "Delete a service",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "ApiKey": {
                "type": "apiKey",
                "name": "Authentication",
                "in": "header"
            }
        }
    }
}